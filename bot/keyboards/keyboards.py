from aiogram.types import (
    InlineKeyboardMarkup,
    InlineKeyboardButton,
    ReplyKeyboardMarkup,
    KeyboardButton,
)
from aiogram.utils.keyboard import InlineKeyboardBuilder, ReplyKeyboardBuilder


def get_main_menu() -> InlineKeyboardMarkup:
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞"""
    builder = InlineKeyboardBuilder()

    builder.row(
        InlineKeyboardButton(
            text="üë§ –ü–æ–¥–∫–ª—é—á–∏—Ç—å user-–±–æ—Ç–∞", callback_data="connect_userbot"
        )
    )
    builder.row(InlineKeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="settings"))
    builder.row(InlineKeyboardButton(text="‚ùì –ü–æ–º–æ—â—å", callback_data="help"))

    return builder.as_markup()


def get_settings_menu() -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
    builder = InlineKeyboardBuilder()

    builder.row(
        InlineKeyboardButton(
            text=" –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–æ—Ä—Ä–µ–∫—Ü–∏–∏", callback_data="correction_settings"
        )
    )
    builder.row(
        InlineKeyboardButton(
            text="ü§ñ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ user-–±–æ—Ç–æ–º", callback_data="userbot_settings"
        )
    )
    builder.row(InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_main"))

    return builder.as_markup()


def get_userbot_menu(
    is_connected: bool, is_active: bool = False
) -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è user-–±–æ—Ç–æ–º"""
    builder = InlineKeyboardBuilder()

    if not is_connected:
        builder.row(
            InlineKeyboardButton(
                text="üîó –ü–æ–¥–∫–ª—é—á–∏—Ç—å user-–±–æ—Ç–∞", callback_data="connect_userbot"
            )
        )
    else:
        if is_active:
            builder.row(
                InlineKeyboardButton(text="‚è∏Ô∏è –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å", callback_data="stop_userbot")
            )
        else:
            builder.row(
                InlineKeyboardButton(text="‚ñ∂Ô∏è –ó–∞–ø—É—Å—Ç–∏—Ç—å", callback_data="start_userbot")
            )

        builder.row(
            InlineKeyboardButton(text="üóëÔ∏è –û—Ç–∫–ª—é—á–∏—Ç—å", callback_data="disconnect_userbot")
        )

    builder.row(InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="settings"))

    return builder.as_markup()


def get_correction_settings_menu() -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∫–æ—Ä—Ä–µ–∫—Ü–∏–∏"""
    builder = InlineKeyboardBuilder()

    builder.row(
        InlineKeyboardButton(
            text="üìè –ú–∏–Ω. –¥–ª–∏–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è", callback_data="set_min_length"
        )
    )
    builder.row(InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="settings"))

    return builder.as_markup()


def get_confirmation_keyboard(action: str) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è"""
    builder = InlineKeyboardBuilder()

    builder.row(
        InlineKeyboardButton(text="‚úÖ –î–∞", callback_data=f"confirm_{action}"),
        InlineKeyboardButton(text="‚ùå –ù–µ—Ç", callback_data="cancel"),
    )

    return builder.as_markup()


def get_phone_request_keyboard() -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞"""
    builder = ReplyKeyboardBuilder()

    builder.row(
        KeyboardButton(text="üì± –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", request_contact=True)
    )
    builder.row(KeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞"))

    return builder.as_markup(resize_keyboard=True, one_time_keyboard=True)


def get_back_keyboard() -> InlineKeyboardMarkup:
    """–ü—Ä–æ—Å—Ç–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ "–ù–∞–∑–∞–¥" """
    builder = InlineKeyboardBuilder()

    builder.row(InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_main"))

    return builder.as_markup()


def get_cancel_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –æ—Ç–º–µ–Ω—ã"""
    builder = InlineKeyboardBuilder()

    builder.row(InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel"))

    return builder.as_markup()


def get_code_input_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤–≤–æ–¥–∞ –∫–æ–¥–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è"""
    builder = InlineKeyboardBuilder()

    builder.row(
        InlineKeyboardButton(text="1", callback_data="code_digit_1"),
        InlineKeyboardButton(text="2", callback_data="code_digit_2"),
        InlineKeyboardButton(text="3", callback_data="code_digit_3"),
    )

    builder.row(
        InlineKeyboardButton(text="4", callback_data="code_digit_4"),
        InlineKeyboardButton(text="5", callback_data="code_digit_5"),
        InlineKeyboardButton(text="6", callback_data="code_digit_6"),
    )

    builder.row(
        InlineKeyboardButton(text="7", callback_data="code_digit_7"),
        InlineKeyboardButton(text="8", callback_data="code_digit_8"),
        InlineKeyboardButton(text="9", callback_data="code_digit_9"),
    )

    builder.row(
        InlineKeyboardButton(text="‚¨ÖÔ∏è –£–¥–∞–ª–∏—Ç—å", callback_data="code_backspace"),
        InlineKeyboardButton(text="0", callback_data="code_digit_0"),
        InlineKeyboardButton(text="‚úÖ –ì–æ—Ç–æ–≤–æ", callback_data="code_submit"),
    )

    builder.row(InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel"))

    return builder.as_markup()


def get_code_display_text(current_code: str) -> str:
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –∫–æ–¥–∞"""
    code_display = ""
    for i in range(5):
        if i < len(current_code):
            code_display += f"[{current_code[i]}] "
        else:
            code_display += "[_] "

    return f"üî¢ <b>–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è:</b>\n\n{code_display}\n\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –≤–≤–æ–¥–∞ –∫–æ–¥–∞:"
